local pl = require('pl.path')
local this = pl.abspath(pl.abspath('.') .. '/' .. debug.getinfo(1).source:match("@(.*)$"))

local encounter, util
describe("LibEncounter", function()
    setup(function()
        _G.LibEncounter_Testing = true
        loadfile(pl.abspath(pl.dirname(this) .. '/../../../Test/TestSetup.lua'))(this, {})
        encounter, _ = LibStub('LibEncounter-1.0', true)
        util, _ = LibStub('LibUtil-1.1', true)
    end)
    teardown(function()
        _G.LibEncounter_Testing = nil
        After()
    end)
    describe("creature names", function()
        it("resolved from ids", function()
            assert.equal("Lucifron", encounter:GetCreatureName(12118))
        end)
    end)
    describe("map names", function()
        it("resolved from map ids", function()
            assert.equal("Molten Core", encounter:GetMapName(409))
        end)
    end)
    describe("map ids", function()
        it("resolved from creature ids", function()
            assert.equal(409, encounter:GetCreatureMapId(12118))
        end)
        it("resolved from map names", function()
            assert.equal(409, encounter:GetMapId('Molten Core'))
            --assert.equal(409, encounter2:GetMapId('CÅ“ur du Magma'))
        end)
    end)
    describe("creature detail", function()
        it("resolved from creature ids", function()
            local creature, map = encounter:GetCreatureDetail(12118)
            assert.equal("Molten Core", map)
            assert.equal("Lucifron", creature)
        end)
    end)
    describe("encounter detail", function()
        it("resolved from encounter id (single creature)", function()
            local creatureIds = encounter:GetEncounterCreatureId(613)
            assert(type(creatureIds) == 'table')
            assert.equal(#creatureIds, 1)
            assert.equal(creatureIds[1], 11983)
        end)
        it("resolved from encounter id (multiple creatures)", function()
            local creatureIds = encounter:GetEncounterCreatureId(710)
            assert(type(creatureIds) == 'table')
            assert.equal(#creatureIds, 3)
            assert.equal(creatureIds[1], 15544)
        end)
    end)
end)